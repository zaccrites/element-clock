{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sym",
				"symbols"
			],
			[
				"EM",
				"EMPTY_GLYPH"
			],
			[
				"symb",
				"symbols"
			],
			[
				"display",
				"displayShouldBlink"
			],
			[
				"blink",
				"blinkCount"
			],
			[
				"symbolOf",
				"symbolOffset2"
			],
			[
				"BLINK_STATE",
				"BLINK_STATE_OFF"
			],
			[
				"BLINK_STATE_",
				"BLINK_STATE_ON"
			],
			[
				"BLINK_ST",
				"BLINK_STATE_OFF"
			],
			[
				"DIs",
				"DISPLAY_MODE_DIGITS"
			],
			[
				"displa",
				"displayMode"
			],
			[
				"symbolO",
				"symbolOffset1"
			],
			[
				"DISPLA",
				"DISPLAY_MODE_DIGITS"
			],
			[
				"DIGIT",
				"DISPLAY_DIGIT_DELAY_MS"
			],
			[
				"digitS",
				"digitSelectBit1"
			],
			[
				"digitSe",
				"digitSelectBit0"
			],
			[
				"digit",
				"digitSelectBit0"
			],
			[
				"dig",
				"digitSelectBit0"
			],
			[
				"drawDig",
				"drawDigits"
			],
			[
				"sleep",
				"sleep_cpu"
			],
			[
				"TIMER_COU",
				"TIMER_COUNT_DIGIT_SLEEP"
			],
			[
				"digi",
				"digitToDraw"
			],
			[
				"TIM",
				"TIM1_COMPA_vect"
			],
			[
				"FAST",
				"FAST_CLOCK_MODE_PIN"
			],
			[
				"dis",
				"displayCharMapElements"
			],
			[
				"eleme",
				"elementMode"
			],
			[
				"pSym",
				"pSymbol1"
			],
			[
				"clear",
				"clearShiftRegister"
			],
			[
				"DIGI",
				"DIGIT_SELECT_2"
			],
			[
				"selec",
				"selectDigit"
			],
			[
				"pgm",
				"pgm_read_word"
			],
			[
				"counte",
				"counter2"
			],
			[
				"_del",
				"_delay_ms"
			],
			[
				"DI",
				"DIGIT_SELECT_1"
			],
			[
				"shift",
				"shiftOutBit"
			],
			[
				"SHIFT_CL",
				"SHIFT_CLEAR_PIN"
			],
			[
				"SEG",
				"SEG_A"
			],
			[
				"_dela",
				"_delay_ms"
			],
			[
				"char",
				"charachter"
			],
			[
				"shiftOUt",
				"shiftOutBit"
			],
			[
				"SHI",
				"SHIFT_LATCH_PIN"
			],
			[
				"SHIF",
				"SHIFT_LATCH_PIN"
			],
			[
				"SHIFT",
				"SHIFT_DATA_PIN"
			],
			[
				"shif",
				"shiftOutBits"
			],
			[
				"_de",
				"_delay_us"
			],
			[
				"LAT",
				"SHIFT_LATCH_PIN"
			],
			[
				"cout",
				"counter"
			],
			[
				"SHIFT_",
				"SHIFT_CLOCK_PIN"
			],
			[
				"displayDii",
				"displayDigitChars"
			],
			[
				"displayDi",
				"selectDisplayDigitChar"
			],
			[
				"enable",
				"enableDisplay"
			],
			[
				"selectDis",
				"selectDisplayDigit"
			],
			[
				"pDig",
				"pDigitChar2"
			],
			[
				"del",
				"_delay_us"
			],
			[
				"_De",
				"_delay_us"
			],
			[
				"CLO",
				"SHIFT_CLOCK_PIN"
			],
			[
				"secon",
				"seconds"
			],
			[
				"quarter",
				"quarterSeconds"
			],
			[
				"pCh",
				"pChar2"
			],
			[
				"get",
				"getDisplaySegmentData"
			],
			[
				"butto",
				"buttonWasPressed"
			],
			[
				"cur",
				"currentButtonState"
			],
			[
				"ena",
				"enableDisplay"
			],
			[
				"shi",
				"shiftOutBit"
			],
			[
				"Re",
				"RED_PIN"
			],
			[
				"REd",
				"RED_PIN"
			],
			[
				"GR",
				"GREEN_PIN"
			],
			[
				"BL",
				"BLUE_PIN"
			],
			[
				"bod",
				"body_types"
			],
			[
				"Confi",
				"ConfigLoader"
			],
			[
				"pro",
				"providers"
			],
			[
				"getRegis",
				"getRegisterHL"
			],
			[
				"getIMe",
				"getImmediateHighMemoryByte"
			],
			[
				"Sim",
				"SimpleByteAddress"
			],
			[
				"getIm",
				"getImmediateByte"
			],
			[
				"getImme",
				"getImmediateByte"
			],
			[
				"getIme",
				"getImmediateWord"
			],
			[
				"getRE",
				"getRegisterA"
			],
			[
				"m_r",
				"m_rMemory"
			],
			[
				"m_Re",
				"m_registerA"
			],
			[
				"read",
				"readByte"
			],
			[
				"ui",
				"uint16_t"
			],
			[
				"setRE",
				"setRegisterC"
			],
			[
				"memoryAt",
				"memoryAtHL"
			],
			[
				"addre",
				"address"
			],
			[
				"prog",
				"programCounter"
			],
			[
				"Mem",
				"MemoryWord"
			],
			[
				"getRe",
				"getRegisterC"
			],
			[
				"memo",
				"memoryAtC"
			],
			[
				"ADD",
				"Addressing"
			],
			[
				"registe",
				"registerA"
			],
			[
				"setRe",
				"setRegisterA"
			],
			[
				"ge",
				"getRegisterL"
			],
			[
				"set",
				"setRegisterA"
			],
			[
				"detectByte",
				"detectByteSubtractionCarry"
			],
			[
				"dete",
				"detectByteSubtractionHalfCarry"
			],
			[
				"setre",
				"setRegisterB"
			],
			[
				"detect",
				"detectByteAdditionHalfCarry"
			],
			[
				"add",
				"addend"
			],
			[
				"ad",
				"addend"
			],
			[
				"carr",
				"Carry"
			],
			[
				"detec",
				"detectByteAdditionHalfCarry"
			],
			[
				"Get",
				"getRegisterA"
			],
			[
				"flag",
				"Flags"
			],
			[
				"detectB",
				"detectByteAdditionHalfCarry"
			],
			[
				"detectByteSubtraci",
				"detectByteSubtractionHalfCarry"
			],
			[
				"regiser",
				"registerA"
			],
			[
				"Memory",
				"MemoryByte"
			],
			[
				"Memo",
				"Memory"
			],
			[
				"uint",
				"uint8_t"
			],
			[
				"exter",
				"externalRamSize"
			],
			[
				"RomB",
				"RomBank0EndAddress"
			],
			[
				"RomBank",
				"RomBankSize"
			],
			[
				"Car",
				"Cartridge"
			],
			[
				"Read",
				"ReadableWordAddress"
			],
			[
				"ReadAble",
				"ReadableByteAddress"
			],
			[
				"Write",
				"WritableByteAddress"
			],
			[
				"Writable",
				"WritableByteAddress"
			],
			[
				"writeT",
				"writeToWorkRam"
			],
			[
				"ZeroPa",
				"ZeroPageRamStartAddress"
			],
			[
				"m_",
				"m_zeroPageRam"
			],
			[
				"Memor",
				"MemoryController"
			],
			[
				"Regis",
				"DoubleRegister"
			],
			[
				"Carr",
				"CarryFlagBit"
			],
			[
				"TEST_OBJ",
				"TEST_OBJECTS"
			],
			[
				"m_mem",
				"m_memoryPointedToByHL"
			],
			[
				"m_ime",
				"m_immediateByte"
			],
			[
				"Condition",
				"FlagCondition"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.c",
			"settings":
			{
				"buffer_size": 20767,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1039,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 174.0,
		"last_filter": "delete",
		"selected_items":
		[
			[
				"delete",
				"ANF: Delete Current File"
			],
			[
				"syntax c",
				"Set Syntax: C"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"makefiel",
				"Set Syntax: Makefile"
			],
			[
				"remvoe",
				"Package Control: Remove Package"
			],
			[
				"move",
				"File: Move"
			],
			[
				"asm",
				"Set Syntax: Assembly x86 (NASM)"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"glsl",
				"Set Syntax: GLSL"
			],
			[
				"python",
				"Set Syntax: Python"
			]
		],
		"width": 539.0
	},
	"console":
	{
		"height": 195.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/zac/Dropbox/Amber Projects/digital_clock/firmware/main.c",
		"/home/zac/tmp/clock/main.c.20160813",
		"/home/zac/code/gameboy/gameboy/Makefile",
		"/home/zac/Dropbox/Amber Projects/digital_clock/firmware/main_old.c",
		"/tmp/Makefile",
		"/home/zac/code/avr/test/Makefile",
		"/home/zac/code/avr/test/main.c",
		"/home/zac/code/avr/test/font_generator.py",
		"/home/zac/code/astro/app.py",
		"/home/zac/code/menuplan/python/menuplan/menuplan.log",
		"/home/zac/code/menuplan/python/menuplan/__main__.py",
		"/home/zac/code/menuplan/python/setup.py",
		"/home/zac/code/menuplan/python/menuplan/__init__.py",
		"/home/zac/code/menuplan/.gitignore",
		"/home/zac/code/menuplan/python/.gitignore",
		"/home/zac/code/menuplan/python/requirements.txt",
		"/home/zac/code/valence/app.py",
		"/home/zac/code/valence/routes.py",
		"/home/zac/code/valence/env_vars.txt",
		"/home/zac/code/valence/config.py",
		"/home/zac/code/valence/example_config.yaml",
		"/home/zac/code/flask_experiments/.gitignore",
		"/home/zac/code/flask_experiments/my_app/app.py",
		"/home/zac/code/nasm/test1.asm",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/client/renderer/VertexBuffer.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/client/gui/GuiMainMenu.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/block/BlockDirt.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/scoreboard/Score.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/server/MinecraftServer.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/world/WorldServer.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/world/World.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/world/biome/BiomeMesa.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/util/registry/IRegistry.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/util/Tuple.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/client/gui/GuiGameOver.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/client/gui/GuiButton.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/scoreboard/Team.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/potion/Potion.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/entity/INpc.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/entity/Entity.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/pathfinding/Path.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/item/ItemPickaxe.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/item/ItemTool.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/entity/EntityAgeable.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/entity/IMerchant.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/block/BlockOre.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/block/BlockEndPortal.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/block/BlockRedstoneOre.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/block/material/Material.java",
		"/home/zac/Downloads/mcp/src/minecraft/Start.java",
		"/home/zac/Downloads/mcp/src/minecraft/net/minecraft/stats/Achievement.java",
		"/home/zac/code/mipsulator/src/graphics.hpp",
		"/home/zac/code/mipsulator/src/mips.cpp",
		"/home/zac/code/gameboy/src/Cpu.cpp",
		"/home/zac/code/gameboy/src/Cpu_instructions.cpp",
		"/home/zac/code/gameboy/src/Addressing.cpp",
		"/home/zac/code/gameboy/src/Memory.cpp",
		"/home/zac/code/gameboy/src/Gpu.hpp",
		"/home/zac/code/gameboy/src/Cartridge.hpp",
		"/home/zac/code/gameboy/src/Memory.hpp",
		"/home/zac/code/gameboy/src/Cpu.hpp",
		"/home/zac/code/gameboy/tests/test_addressing.cpp",
		"/home/zac/code/gameboy/src/Addressing.hpp",
		"/home/zac/code/gameboy/tests/test_cpu_loads.cpp",
		"/home/zac/code/gameboy/tests/test_cpu_8bit_alu.cpp",
		"/home/zac/code/gameboy_OLD/src/Cpu.cpp",
		"/home/zac/code/euler/java/Problem3.java",
		"/home/zac/code/euler/java/Problem2.java",
		"/home/zac/code/euler/java/Problem1.java",
		"/home/zac/code/java/Program.java",
		"/home/zac/code/gameboy/src/Cartridge.cpp",
		"/home/zac/code/gameboy/src/Gpu.cpp",
		"/home/zac/code/gameboy/Makefile",
		"/home/zac/code/gameboy/src/main.cpp",
		"/home/zac/code/gameboy/.gitignore",
		"/home/zac/code/gameboy/tests/main.cpp",
		"/home/zac/code/gameboy/src/definitions.hpp",
		"/home/zac/code/gameboy/gameboy.sublime-project",
		"/home/zac/code/gameboy/notes.md",
		"/home/zac/code/gameboy/tests/catch.hpp",
		"/home/zac/code/chip8/src/chip8.cpp",
		"/home/zac/code/gameboy_OLD/src/Texture.cpp",
		"/home/zac/code/gameboy_OLD/src/main.cpp.working",
		"/home/zac/code/gameboy_OLD/src/Game.hpp",
		"/home/zac/code/gameboy_OLD/src/Game.cpp",
		"/home/zac/code/gameboy_OLD/src/ShaderProgram.cpp",
		"/home/zac/code/gameboy_OLD/src/Shader.cpp",
		"/home/zac/code/gameboy_OLD/src/Texture.hpp",
		"/home/zac/code/gameboy_OLD/src/main.cpp",
		"/home/zac/code/gameboy_OLD/src/Window.cpp",
		"/home/zac/code/gameboy_OLD/src/Window.hpp",
		"/media/zac/Storage/Dropbox/Dropbox/Software_Licenses/Dreamspark (January 2015) Product Keys.txt",
		"/media/zac/Storage/Dropbox/Dropbox/Software_Licenses/Dreamspark Product Keys.txt",
		"/home/zac/code/gameboy/shaders/basic.fragment.glsl",
		"/home/zac/code/gameboy/shaders/basic.vertex.glsl",
		"/home/zac/ogldev-source/tutorial03/tutorial03.cpp",
		"/home/zac/ogldev-source/tutorial02/tutorial02.cpp",
		"/home/zac/ogldev-source/tutorial01/tutorial01.cpp",
		"/home/zac/ogldev-source/tutorial04/tutorial04.cpp",
		"/home/zac/code/gameboy/src/ShaderProgram.hpp",
		"/home/zac/code/gameboy/src/Shader.cpp",
		"/home/zac/code/gameboy/src/ShaderProgram.cpp",
		"/home/zac/code/gameboy/src/Shader.hpp",
		"/home/zac/code/gameboy/src/Background.cpp",
		"/home/zac/code/gameboy/shaders/basic.geometry.glsl",
		"/home/zac/code/gameboy/src/Background.hpp",
		"/home/zac/code/gameboy/src/gameboy.cpp",
		"/home/zac/code/gameboy/src/gameboy.hpp",
		"/home/zac/code/gameboy/src/Graphics.hpp",
		"/home/zac/code/gameboy/src/Graphics.cpp",
		"/home/zac/code/gameboy/tetris_notes.md",
		"/home/zac/code/gameboy/src/Sprite.hpp",
		"/home/zac/code/gameboy/src/Sprite.cpp",
		"/home/zac/code/gameboy/src/GraphicsEnvironment.hpp",
		"/home/zac/code/gameboy/src/GraphicsEnvironment.cpp",
		"/home/zac/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/zac/code/chip8/src/audio.hpp",
		"/home/zac/code/chip8/Makefile",
		"/home/zac/code/gameboy/src/memory.hpp",
		"/home/zac/code/chip8/src/main.cpp",
		"/home/zac/code/mipsulator/src/main.cpp",
		"/home/zac/code/gameboy/src/graphics.hpp",
		"/home/zac/code/gameboy/src/graphics.cpp",
		"/home/zac/tmp/test.cpp",
		"/home/zac/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/zac/code/examples/c++/rule_of_five.cpp",
		"/home/zac/code/gameboy/src/cartridge.hpp",
		"/home/zac/code/gameboy/src/cartridge.cpp"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 111.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" =",
			":=",
			"${",
			"PROGRAMMER",
			"displayShouldBlink",
			"blinkCount",
			"blink",
			"FAST_TIMER_COUNT",
			"TIMER_COUNT_CLOCK",
			"TIMER_COUNT_FAST",
			"TIMER_COUNT",
			"sleep",
			"           = (1 << ",
			"i",
			"digit",
			"i",
			"64",
			"DIGIT_SLEEP_COUNT",
			"FAST_TIMER_COUNT",
			" setupTimer",
			"previousFastClockMode",
			"currentFastClockMode",
			"DISPLAY_DIGIT_DELAY_MS",
			"SHIFT_CLOCK_DELAY",
			"DISPLAY_DIGIT_DELAY",
			"DIGIT_DELAY",
			"CLOCK_DELAY",
			"define",
			"displayFont",
			"symbol1Offset",
			"#define",
			"5",
			"mode",
			"true",
			"false",
			"true",
			"false",
			"true",
			"false",
			"true",
			"false",
			"true",
			"false",
			"true",
			"symbol",
			"charachter",
			"10",
			"modulus",
			"true",
			"latchOutputBits",
			"true",
			"shiftOutBit",
			"true",
			"; /",
			"false",
			"true",
			"50",
			"UNDEFINED_GLYPH",
			"_delay_ms",
			"SHIFT_DATA_PIN",
			"PORTB",
			"250",
			"pChar2",
			"pChar1",
			"char2",
			"char1",
			"SEG D",
			"))",
			" ",
			"make_font_char",
			"SEGMENT",
			"SEGMENT_B",
			"name",
			"segment_names",
			"segment_name",
			"& ",
			"//",
			"argc",
			"bodies",
			"status_code",
			"mimetype=",
			"child_path_parts",
			"getenv_constructor",
			"_get_key",
			"a",
			"&reg",
			"registerHL",
			"isterHL.wr",
			"rHL.wr",
			"memoryAtC",
			"MemoryAtC",
			"memoryAtC",
			"Address",
			"address",
			"m_rAddress",
			"EffectiveWordAddress",
			"Address",
			"EffectiveWordAddress",
			"const",
			"m_rBase",
			"m_rOffset",
			"const",
			"getImmediateHighMemoryByte",
			"CHECK",
			"getHighImmediateByte",
			"register",
			"Register",
			"uint8_t",
			"m_rLowTarget",
			"wordAddress",
			"byteAddress",
			"address",
			"x",
			"rAddress",
			"read()",
			"SimpleWordAddress",
			"Constant",
			"Simple",
			"Constant",
			"uint8_t",
			"ConstantByte",
			"m_address",
			"address",
			"m_address",
			"10",
			"B",
			"20",
			"memoryAtHL"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"break",
			"break;",
			"GameBoy::Cpu::",
			"ld_Mrr_r",
			"ld_Mrr_n",
			"ld_Mrr_r",
			"ld_r_Mrr",
			"ld_r_r",
			"ld_r_n",
			"--"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20767,
						"regions":
						{
						},
						"selection":
						[
							[
								536,
								536
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 36
							}
						},
						"translation.x": -0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1039,
						"regions":
						{
						},
						"selection":
						[
							[
								424,
								424
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax",
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.518837675351,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "clock.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"make",
				"~/Dropbox/Amber Projects/digital_clock/firmware/Makefile"
			],
			[
				"gitig",
				".gitignore"
			],
			[
				"mainmenu",
				"client/gui/GuiMainMenu.java"
			],
			[
				"start",
				"Start.java"
			],
			[
				"achievementlist",
				"minecraft/stats/AchievementList.java"
			],
			[
				"achievement",
				"minecraft/stats/Achievement.java"
			],
			[
				"t",
				"tests/test_addressing.cpp"
			],
			[
				"ddress",
				"src/Addressing.hpp"
			],
			[
				"testa",
				"tests/test_addressing.cpp"
			],
			[
				"addre",
				"src/Addressing.hpp"
			],
			[
				"testadd",
				"tests/test_addressing.cpp"
			],
			[
				"add",
				"src/Addressing.hpp"
			],
			[
				"makefi",
				"Makefile"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"makef",
				"Makefile"
			],
			[
				"catch",
				"tests/catch.hpp"
			],
			[
				"cat",
				"tests/catch.hpp"
			],
			[
				"memoryhpp",
				"src/Memory.hpp"
			],
			[
				"memorycpp",
				"src/Memory.cpp"
			],
			[
				"shaderpro",
				"src/ShaderProgram.cpp"
			],
			[
				"working",
				"src/main.cpp.working"
			],
			[
				"shadercpp",
				"src/Shader.cpp"
			],
			[
				"gamecpp",
				"src/Game.cpp"
			],
			[
				"game",
				"src/Game.hpp"
			],
			[
				"system",
				"src/System.hpp"
			],
			[
				"vertex",
				"shaders/basic.vertex.glsl"
			],
			[
				"shaderprog",
				"src/ShaderProgram.cpp"
			],
			[
				"shader.cpp",
				"src/Shader.cpp"
			],
			[
				"fragment",
				"shaders/basic.fragment.glsl"
			],
			[
				"backgroun",
				"src/Background.cpp"
			],
			[
				"glsl",
				"shaders/basic.fragment.glsl"
			],
			[
				"shaderhpp",
				"src/Shader.hpp"
			],
			[
				"shdaerpro",
				"src/ShaderProgram.cpp"
			],
			[
				"shader",
				"shaders/basic.vertex.glsl"
			],
			[
				"gameboy",
				"src/gameboy.cpp"
			],
			[
				"rite",
				"src/Sprite.hpp"
			],
			[
				"sprite",
				"src/Sprite.cpp"
			],
			[
				"grahpics",
				"src/graphics.cpp"
			],
			[
				"makefile",
				"Makefile"
			],
			[
				"graphics",
				"src/graphics.hpp"
			],
			[
				"memory",
				"src/memory.hpp"
			],
			[
				"cart",
				"src/cartridge.hpp"
			],
			[
				"graph",
				"src/graphics.hpp"
			],
			[
				"__main",
				"assembler/__main__.py"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"__",
				"assemblips/__main__.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"_vintageous_last_char_search_command": "vi_f",
		"_vintageous_last_character_search": "/",
		"_vintageous_reset_during_init": true,
		"vintage":
		{
			"_cmdline_cd": "/home/zac/Dropbox/Amber Projects/digital_clock/firmware"
		}
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 219.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
